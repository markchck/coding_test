# https://www.acmicpc.net/problem/2110
# 7시 42분 시작

# 두 공유기 사이거리를 최대로하면서(자원을 절약하면서)
# 그러면서도 촘촘하게(끊기는 곳 없게)

# 내가 생각한 방법을 적어볼게..(코드로 구현은 못할 것 같은데 아이디어만..)
# 일단 첫집과 끝집은 무조건 설치한다. 그리고 남은 공유기로 첫집과 끝집을 뺀 값을 나눠서 최적의 공유기 설치 간격을 구하고 말뚝을 박아놓는다.
# 그 말뚝들과 가장 가까운 집을 찾아서 말뚝과의 거리 차이를 a라하고 전부다 구한다.
# 최적의 거리 차이 - a 중 가장 큰 값이 답이다.
# 근데 이 방법은 생각해보니 부르트포스랑 다를게 없다. 왜냐? 10000만 개의 집이 있으면 공유기 말뚝도 엄청 박을거고 말뚝과 공유기 거리차이도 전부 다 빼봐야함. O(n)임.
# 결국 이진탐색처럼 절반을 버리는 방법을 찾지 않는 이상 시간 초과가 뜰 것이다. 

import sys
N, C = map(int,sys.stdin.readline().split()) #집의 개수

house = []
for i in range(N):
  house.append(int(sys.stdin.readline().strip()))

house.sort

#1,2,4,8,9
first = house[0] #1
last = house[N-1] #9

